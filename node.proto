syntax = "proto3";


service TicTacToe{
    rpc StartGame(InitParams) returns (ElectionResponse);
    rpc NotifyLeader(LeaderID) returns (SuccessResponse);
    rpc SetSymbol(Symbol) returns (SymbolResponse);
    rpc ListBoard(Empty) returns (BoardResponse);
    rpc SetLeader(Leader) returns (LeaderResponse);
    rpc RequestTime(Empty) returns (NodeTime);
    rpc SetTimeDiff(TimeDiff) returns (Empty);
    rpc NotifyWinner(Winner) returns (Empty);
    rpc NotifyTimeout(TimeoutMessage) returns (Empty);
    rpc SetTimeoutTime(TimeoutSetRequest) returns (TimeoutMessage);
}

message Empty {}

message TimeoutMessage {
    string message = 1;
}

message TimeoutSetRequest {
    string target = 1;
    int32 time_seconds = 2;
    int32 node_id = 3;
}

message InitParams{
    repeated int32 list_ids = 1;
}

message ElectionResponse{
    int32 leader_id = 1;
    string leader_time = 2;
}

message LeaderID{
    int32 leader_id = 1;
}

message SuccessResponse{
    bool isComplete = 1;
}

message Symbol{
    int32 pos = 1;
    string type = 2;
    int32 node_id = 3;
    string node_time = 4;
}

message SymbolResponse{
    bool isComplete = 1;
    string message = 2;
    BoardResponse board = 5;
    bool isFinished = 6;
}

message BoardResponse{
    string board = 1;
    bool isComplete = 2;
}

message NodeTime{
    string node_time = 1;
    int32 node_id = 2;
}

message TimeDiff{
    double total_time_seconds = 1;
}

message Leader{
    int32 winner_id = 1;
}

message LeaderResponse{
    bool isComplete = 2;
}

message TimeOut{
    int32 set_timeout = 1;
}

message TimeoutResponse{
    bool isComplete = 1;
}

message Winner{
    string winner = 1;
}